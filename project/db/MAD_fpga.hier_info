|MADs
LCD_RS <= LCD:inst12.lcd_rs
CLOCK_50 => LCD:inst12.clock_50MHz
CLOCK_50 => spiker_50kHz:inst1.ck
CLOCK_50 => FSM:inst2.clk
CLOCK_50 => uart:uart1.clk
CLOCK_50 => Keyfilter:inst15.clk
CLOCK_50 => counter:inst7.clk
CLOCK_50 => Keyfilter:inst5.clk
CLOCK_50 => Keyfilter:inst10.clk
CLOCK_50 => Keyfilter:inst13.clk
CLOCK_50 => Keyfilter:inst16.clk
KEY[0] => NOT1.IN0
KEY[1] => inst6.IN0
KEY[2] => inst9.IN0
KEY[3] => inst8.IN0
UART_RXD => uart:uart1.rx
LCD_EN <= LCD:inst12.lcd_en
LCD_RW <= LCD:inst12.lcd_rw
LCD_ON <= LCD:inst12.lcd_on
UART_TXD <= uart:uart1.tx
LCD_BLON <= LCD:inst12.lcd_blon
LCD_DATA[0] <= LCD:inst12.lcd_data[0]
LCD_DATA[1] <= LCD:inst12.lcd_data[1]
LCD_DATA[2] <= LCD:inst12.lcd_data[2]
LCD_DATA[3] <= LCD:inst12.lcd_data[3]
LCD_DATA[4] <= LCD:inst12.lcd_data[4]
LCD_DATA[5] <= LCD:inst12.lcd_data[5]
LCD_DATA[6] <= LCD:inst12.lcd_data[6]
LCD_DATA[7] <= LCD:inst12.lcd_data[7]
LEDG[0] <= FSM:inst2.led_on
LEDR[0] <= Decoder:inst3.led0
LEDR[1] <= Decoder:inst3.led1
LEDR[2] <= Decoder:inst3.led2
LEDR[3] <= Decoder:inst3.led3


|MADs|LCD:inst12
clock_50MHz => char_pointer[0].CLK
clock_50MHz => char_pointer[1].CLK
clock_50MHz => char_pointer[2].CLK
clock_50MHz => char_pointer[3].CLK
clock_50MHz => char_pointer[4].CLK
clock_50MHz => delay_count[0].CLK
clock_50MHz => delay_count[1].CLK
clock_50MHz => delay_count[2].CLK
clock_50MHz => delay_count[3].CLK
clock_50MHz => delay_count[4].CLK
clock_50MHz => delay_count[5].CLK
clock_50MHz => delay_count[6].CLK
clock_50MHz => delay_count[7].CLK
clock_50MHz => delay_count[8].CLK
clock_50MHz => delay_count[9].CLK
clock_50MHz => delay_count[10].CLK
clock_50MHz => delay_count[11].CLK
clock_50MHz => delay_count[12].CLK
clock_50MHz => delay_count[13].CLK
clock_50MHz => delay_count[14].CLK
clock_50MHz => delay_count[15].CLK
clock_50MHz => lcd_rw_int.CLK
clock_50MHz => lcd_rs~reg0.CLK
clock_50MHz => lcd_en~reg0.CLK
clock_50MHz => lcd_data_int[0].CLK
clock_50MHz => lcd_data_int[1].CLK
clock_50MHz => lcd_data_int[2].CLK
clock_50MHz => lcd_data_int[3].CLK
clock_50MHz => lcd_data_int[4].CLK
clock_50MHz => lcd_data_int[5].CLK
clock_50MHz => lcd_data_int[6].CLK
clock_50MHz => lcd_data_int[7].CLK
clock_50MHz => next_state~1.DATAIN
clock_50MHz => lcd_fsm~27.DATAIN
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => lcd_fsm.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => delay_count.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => next_state.OUTPUTSELECT
spike_50kHz => char_pointer.OUTPUTSELECT
spike_50kHz => char_pointer.OUTPUTSELECT
spike_50kHz => char_pointer.OUTPUTSELECT
spike_50kHz => char_pointer.OUTPUTSELECT
spike_50kHz => char_pointer.OUTPUTSELECT
spike_50kHz => lcd_data_int[7].ENA
spike_50kHz => lcd_data_int[6].ENA
spike_50kHz => lcd_data_int[5].ENA
spike_50kHz => lcd_data_int[4].ENA
spike_50kHz => lcd_data_int[3].ENA
spike_50kHz => lcd_data_int[2].ENA
spike_50kHz => lcd_data_int[1].ENA
spike_50kHz => lcd_data_int[0].ENA
spike_50kHz => lcd_en~reg0.ENA
spike_50kHz => lcd_rs~reg0.ENA
spike_50kHz => lcd_rw_int.ENA
reset => lcd_rw_int.PRESET
reset => lcd_rs~reg0.ACLR
reset => lcd_en~reg0.PRESET
reset => lcd_data_int[0].ACLR
reset => lcd_data_int[1].ACLR
reset => lcd_data_int[2].ACLR
reset => lcd_data_int[3].PRESET
reset => lcd_data_int[4].PRESET
reset => lcd_data_int[5].PRESET
reset => lcd_data_int[6].ACLR
reset => lcd_data_int[7].ACLR
reset => next_state~3.DATAIN
reset => lcd_fsm~29.DATAIN
reset => delay_count[15].ENA
reset => delay_count[14].ENA
reset => delay_count[13].ENA
reset => delay_count[12].ENA
reset => delay_count[11].ENA
reset => delay_count[10].ENA
reset => delay_count[9].ENA
reset => delay_count[8].ENA
reset => delay_count[7].ENA
reset => delay_count[6].ENA
reset => delay_count[5].ENA
reset => delay_count[4].ENA
reset => delay_count[3].ENA
reset => delay_count[2].ENA
reset => delay_count[1].ENA
reset => delay_count[0].ENA
reset => char_pointer[4].ENA
reset => char_pointer[3].ENA
reset => char_pointer[2].ENA
reset => char_pointer[1].ENA
reset => char_pointer[0].ENA
message[0] => Mux17.IN21
message[0] => Mux35.IN21
message[0] => Mux53.IN21
message[0] => Mux71.IN21
message[0] => Mux89.IN21
message[0] => Mux107.IN21
message[0] => Mux125.IN21
message[0] => Mux143.IN21
message[1] => Mux17.IN20
message[1] => Mux35.IN20
message[1] => Mux53.IN20
message[1] => Mux71.IN20
message[1] => Mux89.IN20
message[1] => Mux107.IN20
message[1] => Mux125.IN20
message[1] => Mux143.IN20
message[2] => Mux17.IN19
message[2] => Mux35.IN19
message[2] => Mux53.IN19
message[2] => Mux71.IN19
message[2] => Mux89.IN19
message[2] => Mux107.IN19
message[2] => Mux125.IN19
message[2] => Mux143.IN19
message[3] => Mux17.IN18
message[3] => Mux35.IN18
message[3] => Mux53.IN18
message[3] => Mux71.IN18
message[3] => Mux89.IN18
message[3] => Mux107.IN18
message[3] => Mux125.IN18
message[3] => Mux143.IN18
message[4] => Mux17.IN17
message[4] => Mux35.IN17
message[4] => Mux53.IN17
message[4] => Mux71.IN17
message[4] => Mux89.IN17
message[4] => Mux107.IN17
message[4] => Mux125.IN17
message[4] => Mux143.IN17
message[5] => ~NO_FANOUT~
message[6] => ~NO_FANOUT~
message[7] => ~NO_FANOUT~
lcd_rs <= lcd_rs~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_en <= lcd_en~reg0.DB_MAX_OUTPUT_PORT_TYPE
lcd_rw <= lcd_rw_int.DB_MAX_OUTPUT_PORT_TYPE
lcd_on <= <VCC>
lcd_blon <= comb.DB_MAX_OUTPUT_PORT_TYPE
lcd_data[0] <> lcd_data[0]
lcd_data[1] <> lcd_data[1]
lcd_data[2] <> lcd_data[2]
lcd_data[3] <> lcd_data[3]
lcd_data[4] <> lcd_data[4]
lcd_data[5] <> lcd_data[5]
lcd_data[6] <> lcd_data[6]
lcd_data[7] <> lcd_data[7]


|MADs|spiker_50kHz:inst1
ck => n_rc~reg0.CLK
ck => cnt_clk[0].CLK
ck => cnt_clk[1].CLK
ck => cnt_clk[2].CLK
ck => cnt_clk[3].CLK
ck => cnt_clk[4].CLK
ck => cnt_clk[5].CLK
ck => cnt_clk[6].CLK
ck => cnt_clk[7].CLK
ck => cnt_clk[8].CLK
ck => cnt_clk[9].CLK
n_cl => cnt_clk.OUTPUTSELECT
n_cl => cnt_clk.OUTPUTSELECT
n_cl => cnt_clk.OUTPUTSELECT
n_cl => cnt_clk.OUTPUTSELECT
n_cl => cnt_clk.OUTPUTSELECT
n_cl => cnt_clk.OUTPUTSELECT
n_cl => cnt_clk.OUTPUTSELECT
n_cl => cnt_clk.OUTPUTSELECT
n_cl => cnt_clk.OUTPUTSELECT
n_cl => cnt_clk.OUTPUTSELECT
n_cl => n_rc~reg0.ENA
n_ce => cnt_clk.OUTPUTSELECT
n_ce => cnt_clk.OUTPUTSELECT
n_ce => cnt_clk.OUTPUTSELECT
n_ce => cnt_clk.OUTPUTSELECT
n_ce => cnt_clk.OUTPUTSELECT
n_ce => cnt_clk.OUTPUTSELECT
n_ce => cnt_clk.OUTPUTSELECT
n_ce => cnt_clk.OUTPUTSELECT
n_ce => cnt_clk.OUTPUTSELECT
n_ce => cnt_clk.OUTPUTSELECT
n_ce => n_rc.OUTPUTSELECT
n_rc <= n_rc~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MADs|Mux:inst14
en => out1.OUTPUTSELECT
en => out1.OUTPUTSELECT
en => out1.OUTPUTSELECT
en => out1.OUTPUTSELECT
en => out1.OUTPUTSELECT
en => out1.OUTPUTSELECT
en => out1.OUTPUTSELECT
en => out1.OUTPUTSELECT
in1[0] => out1.DATAB
in1[1] => out1.DATAB
in1[2] => out1.DATAB
in1[3] => out1.DATAB
in1[4] => out1.DATAB
in1[5] => out1.DATAB
in1[6] => out1.DATAB
in1[7] => out1.DATAB
in2[0] => out1.DATAA
in2[1] => out1.DATAA
in2[2] => out1.DATAA
in2[3] => out1.DATAA
in2[4] => out1.DATAA
in2[5] => out1.DATAA
in2[6] => out1.DATAA
in2[7] => out1.DATAA
out1[0] <= out1.DB_MAX_OUTPUT_PORT_TYPE
out1[1] <= out1.DB_MAX_OUTPUT_PORT_TYPE
out1[2] <= out1.DB_MAX_OUTPUT_PORT_TYPE
out1[3] <= out1.DB_MAX_OUTPUT_PORT_TYPE
out1[4] <= out1.DB_MAX_OUTPUT_PORT_TYPE
out1[5] <= out1.DB_MAX_OUTPUT_PORT_TYPE
out1[6] <= out1.DB_MAX_OUTPUT_PORT_TYPE
out1[7] <= out1.DB_MAX_OUTPUT_PORT_TYPE


|MADs|FSM:inst2
clk => delay_init[0].CLK
clk => delay_init[1].CLK
clk => delay_init[2].CLK
clk => delay_init[3].CLK
clk => delay_init[4].CLK
clk => delay_init[5].CLK
clk => delay_init[6].CLK
clk => delay_init[7].CLK
clk => delay_init[8].CLK
clk => delay_init[9].CLK
clk => delay_init[10].CLK
clk => delay_init[11].CLK
clk => delay_init[12].CLK
clk => delay_init[13].CLK
clk => delay_init[14].CLK
clk => delay_init[15].CLK
clk => delay_count2[0].CLK
clk => delay_count2[1].CLK
clk => delay_count2[2].CLK
clk => delay_count2[3].CLK
clk => delay_count2[4].CLK
clk => delay_count2[5].CLK
clk => delay_count2[6].CLK
clk => delay_count2[7].CLK
clk => delay_count2[8].CLK
clk => delay_count2[9].CLK
clk => delay_count2[10].CLK
clk => delay_count2[11].CLK
clk => delay_count2[12].CLK
clk => delay_count2[13].CLK
clk => delay_count2[14].CLK
clk => delay_count2[15].CLK
clk => delay_count[0].CLK
clk => delay_count[1].CLK
clk => delay_count[2].CLK
clk => delay_count[3].CLK
clk => delay_count[4].CLK
clk => delay_count[5].CLK
clk => delay_count[6].CLK
clk => delay_count[7].CLK
clk => delay_count[8].CLK
clk => delay_count[9].CLK
clk => delay_count[10].CLK
clk => delay_count[11].CLK
clk => delay_count[12].CLK
clk => delay_count[13].CLK
clk => delay_count[14].CLK
clk => delay_count[15].CLK
clk => en_counter~reg0.CLK
clk => led_on~reg0.CLK
clk => code[0]~reg0.CLK
clk => code[1]~reg0.CLK
clk => code[2]~reg0.CLK
clk => code[3]~reg0.CLK
clk => code[4]~reg0.CLK
clk => code[5]~reg0.CLK
clk => code[6]~reg0.CLK
clk => code[7]~reg0.CLK
clk => en_mux~reg0.CLK
clk => en_serial~reg0.CLK
clk => next_state~1.DATAIN
clk => present_state~15.DATAIN
level_OK => Selector6.IN4
level_OK => Selector9.IN3
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_count2.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => delay_init.OUTPUTSELECT
level_OK => Selector8.IN3
end_receipt => next_state.DATAA
end_receipt => next_state.DATAA
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_count2.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => delay_init.OUTPUTSELECT
n_enter => Selector0.IN2
n_enter => Selector11.IN4
n_enter => Selector12.IN4
n_enter => Selector66.IN3
n_enter => Selector67.IN3
n_enter => Selector66.IN1
n_enter => Selector65.IN1
n_enter => Selector11.IN2
n_enter => Selector10.IN2
n_reset => present_state.OUTPUTSELECT
n_reset => present_state.OUTPUTSELECT
n_reset => present_state.OUTPUTSELECT
n_reset => present_state.OUTPUTSELECT
n_reset => present_state.OUTPUTSELECT
n_reset => present_state.OUTPUTSELECT
n_reset => present_state.OUTPUTSELECT
n_reset => next_state.OUTPUTSELECT
n_reset => next_state.OUTPUTSELECT
n_reset => next_state.OUTPUTSELECT
n_reset => next_state.OUTPUTSELECT
n_reset => next_state.OUTPUTSELECT
n_reset => next_state.OUTPUTSELECT
n_reset => next_state.OUTPUTSELECT
n_reset => en_serial.OUTPUTSELECT
n_reset => en_mux.OUTPUTSELECT
n_reset => code.OUTPUTSELECT
n_reset => code.OUTPUTSELECT
n_reset => code.OUTPUTSELECT
n_reset => code.OUTPUTSELECT
n_reset => code.OUTPUTSELECT
n_reset => code.OUTPUTSELECT
n_reset => code.OUTPUTSELECT
n_reset => code.OUTPUTSELECT
n_reset => en_counter.OUTPUTSELECT
n_reset => led_on~reg0.DATAIN
n_reset => delay_init[1].ENA
n_reset => delay_init[0].ENA
n_reset => delay_init[2].ENA
n_reset => delay_init[3].ENA
n_reset => delay_init[4].ENA
n_reset => delay_init[5].ENA
n_reset => delay_init[6].ENA
n_reset => delay_init[7].ENA
n_reset => delay_init[8].ENA
n_reset => delay_init[9].ENA
n_reset => delay_init[10].ENA
n_reset => delay_init[11].ENA
n_reset => delay_init[12].ENA
n_reset => delay_init[13].ENA
n_reset => delay_init[14].ENA
n_reset => delay_init[15].ENA
n_reset => delay_count2[0].ENA
n_reset => delay_count2[1].ENA
n_reset => delay_count2[2].ENA
n_reset => delay_count2[3].ENA
n_reset => delay_count2[4].ENA
n_reset => delay_count2[5].ENA
n_reset => delay_count2[6].ENA
n_reset => delay_count2[7].ENA
n_reset => delay_count2[8].ENA
n_reset => delay_count2[9].ENA
n_reset => delay_count2[10].ENA
n_reset => delay_count2[11].ENA
n_reset => delay_count2[12].ENA
n_reset => delay_count2[13].ENA
n_reset => delay_count2[14].ENA
n_reset => delay_count2[15].ENA
n_reset => delay_count[0].ENA
n_reset => delay_count[1].ENA
n_reset => delay_count[2].ENA
n_reset => delay_count[3].ENA
n_reset => delay_count[4].ENA
n_reset => delay_count[5].ENA
n_reset => delay_count[6].ENA
n_reset => delay_count[7].ENA
n_reset => delay_count[8].ENA
n_reset => delay_count[9].ENA
n_reset => delay_count[10].ENA
n_reset => delay_count[11].ENA
n_reset => delay_count[12].ENA
n_reset => delay_count[13].ENA
n_reset => delay_count[14].ENA
n_reset => delay_count[15].ENA
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
error => delay_count.OUTPUTSELECT
led_on <= led_on~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[0] <= code[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[1] <= code[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[2] <= code[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[3] <= code[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[4] <= code[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[5] <= code[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[6] <= code[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[7] <= code[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
en_serial <= en_serial~reg0.DB_MAX_OUTPUT_PORT_TYPE
en_mux <= en_mux~reg0.DB_MAX_OUTPUT_PORT_TYPE
en_counter <= en_counter~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MADs|Decoder:inst3
msg[0] => Equal0.IN15
msg[0] => Equal1.IN15
msg[0] => Equal2.IN15
msg[0] => led0.DATAA
msg[1] => Equal0.IN14
msg[1] => Equal1.IN14
msg[1] => Equal2.IN14
msg[1] => led1.DATAA
msg[2] => Equal0.IN13
msg[2] => Equal1.IN13
msg[2] => Equal2.IN13
msg[2] => led2.DATAA
msg[3] => Equal0.IN12
msg[3] => Equal1.IN12
msg[3] => Equal2.IN12
msg[3] => led3.DATAA
msg[4] => Equal0.IN11
msg[4] => Equal1.IN11
msg[4] => Equal2.IN11
msg[5] => Equal0.IN10
msg[5] => Equal1.IN10
msg[5] => Equal2.IN10
msg[6] => Equal0.IN9
msg[6] => Equal1.IN9
msg[6] => Equal2.IN9
msg[7] => Equal0.IN8
msg[7] => Equal1.IN8
msg[7] => Equal2.IN8
led0 <= led0.DB_MAX_OUTPUT_PORT_TYPE
led1 <= led1.DB_MAX_OUTPUT_PORT_TYPE
led3 <= led3.DB_MAX_OUTPUT_PORT_TYPE
led2 <= led2.DB_MAX_OUTPUT_PORT_TYPE
receipt <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
levels <= levels.DB_MAX_OUTPUT_PORT_TYPE
error <= error.DB_MAX_OUTPUT_PORT_TYPE


|MADs|uart:uart1
clk => rx_data_tmp[1].CLK
clk => rx_data_tmp[2].CLK
clk => rx_data_tmp[3].CLK
clk => rx_data_tmp[4].CLK
clk => rx_data_tmp[5].CLK
clk => rx_data_tmp[6].CLK
clk => rx_data_tmp[7].CLK
clk => rx_data[0]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[7]~reg0.CLK
clk => rx_clk_cnt[0].CLK
clk => rx_clk_cnt[1].CLK
clk => rx_clk_cnt[2].CLK
clk => rx_clk_cnt[3].CLK
clk => rx_clk_cnt[4].CLK
clk => rx_data_cnt[0].CLK
clk => rx_data_cnt[1].CLK
clk => rx_data_cnt[2].CLK
clk => rx_par_bit.CLK
clk => rx_ready~reg0.CLK
clk => rx_clk_en.CLK
clk => \rx_clk_gen:counter[0].CLK
clk => \rx_clk_gen:counter[1].CLK
clk => \rx_clk_gen:counter[2].CLK
clk => \rx_clk_gen:counter[3].CLK
clk => \rx_clk_gen:counter[4].CLK
clk => \rx_clk_gen:counter[5].CLK
clk => \rx_clk_gen:counter[6].CLK
clk => \rx_clk_gen:counter[7].CLK
clk => \rx_clk_gen:counter[8].CLK
clk => rx_data_deb.CLK
clk => \rx_debounceer:deb_buf[0].CLK
clk => \rx_debounceer:deb_buf[1].CLK
clk => \rx_debounceer:deb_buf[2].CLK
clk => \rx_debounceer:deb_buf[3].CLK
clk => tx_end~reg0.CLK
clk => tx_par_bit.CLK
clk => tx_data_cnt[0].CLK
clk => tx_data_cnt[1].CLK
clk => tx_data_cnt[2].CLK
clk => tx_data_tmp[0].CLK
clk => tx_data_tmp[1].CLK
clk => tx_data_tmp[2].CLK
clk => tx_data_tmp[3].CLK
clk => tx_data_tmp[4].CLK
clk => tx_data_tmp[5].CLK
clk => tx_data_tmp[6].CLK
clk => tx_data_tmp[7].CLK
clk => tx~reg0.CLK
clk => tx_req_int.CLK
clk => tx_clk_en.CLK
clk => \tx_clk_gen:counter[0].CLK
clk => \tx_clk_gen:counter[1].CLK
clk => \tx_clk_gen:counter[2].CLK
clk => \tx_clk_gen:counter[3].CLK
clk => \tx_clk_gen:counter[4].CLK
clk => \tx_clk_gen:counter[5].CLK
clk => \tx_clk_gen:counter[6].CLK
clk => \tx_clk_gen:counter[7].CLK
clk => \tx_clk_gen:counter[8].CLK
clk => \tx_clk_gen:counter[9].CLK
clk => \tx_clk_gen:counter[10].CLK
clk => \tx_clk_gen:counter[11].CLK
clk => \tx_clk_gen:counter[12].CLK
clk => rx_fsm~8.DATAIN
clk => tx_fsm~8.DATAIN
rst => tx_clk_en.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => tx_fsm.OUTPUTSELECT
rst => tx_fsm.OUTPUTSELECT
rst => tx_fsm.OUTPUTSELECT
rst => tx_fsm.OUTPUTSELECT
rst => tx_fsm.OUTPUTSELECT
rst => tx_fsm.OUTPUTSELECT
rst => tx_fsm.OUTPUTSELECT
rst => tx_par_bit.OUTPUTSELECT
rst => tx_req_int.OUTPUTSELECT
rst => tx_data_tmp.OUTPUTSELECT
rst => tx_data_tmp.OUTPUTSELECT
rst => tx_data_tmp.OUTPUTSELECT
rst => tx_data_tmp.OUTPUTSELECT
rst => tx_data_tmp.OUTPUTSELECT
rst => tx_data_tmp.OUTPUTSELECT
rst => tx_data_tmp.OUTPUTSELECT
rst => tx_data_tmp.OUTPUTSELECT
rst => tx_data_cnt.OUTPUTSELECT
rst => tx_data_cnt.OUTPUTSELECT
rst => tx_data_cnt.OUTPUTSELECT
rst => rx_clk_en.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => counter.OUTPUTSELECT
rst => rx_fsm.OUTPUTSELECT
rst => rx_fsm.OUTPUTSELECT
rst => rx_fsm.OUTPUTSELECT
rst => rx_fsm.OUTPUTSELECT
rst => rx_fsm.OUTPUTSELECT
rst => rx_fsm.OUTPUTSELECT
rst => rx_fsm.OUTPUTSELECT
rst => rx_ready.OUTPUTSELECT
rst => rx_data.OUTPUTSELECT
rst => rx_data.OUTPUTSELECT
rst => rx_data.OUTPUTSELECT
rst => rx_data.OUTPUTSELECT
rst => rx_data.OUTPUTSELECT
rst => rx_data.OUTPUTSELECT
rst => rx_data.OUTPUTSELECT
rst => rx_data.OUTPUTSELECT
rst => rx_data_tmp.OUTPUTSELECT
rst => rx_data_tmp.OUTPUTSELECT
rst => rx_data_tmp.OUTPUTSELECT
rst => rx_data_tmp.OUTPUTSELECT
rst => rx_data_tmp.OUTPUTSELECT
rst => rx_data_tmp.OUTPUTSELECT
rst => rx_data_tmp.OUTPUTSELECT
rst => rx_data_cnt.OUTPUTSELECT
rst => rx_data_cnt.OUTPUTSELECT
rst => rx_data_cnt.OUTPUTSELECT
rst => rx_clk_cnt.OUTPUTSELECT
rst => rx_clk_cnt.OUTPUTSELECT
rst => rx_clk_cnt.OUTPUTSELECT
rst => rx_clk_cnt.OUTPUTSELECT
rst => rx_clk_cnt.OUTPUTSELECT
rx => rx_par_bit.IN1
rx => rx_data.DATAB
rx => rx_data_tmp.DATAA
rx => rx_proc.IN1
rx => \rx_debounceer:deb_buf[0].DATAIN
tx <= tx~reg0.DB_MAX_OUTPUT_PORT_TYPE
par_en => tx_fsm.DATAB
par_en => rx_par_bit.OUTPUTSELECT
par_en => rx_fsm.DATAB
par_en => rx_ready.DATAB
par_en => rx_fsm.DATAB
par_en => tx_fsm.DATAB
tx_req => tx_req_int.OUTPUTSELECT
tx_end <= tx_end~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data[0] => tx_data_tmp.DATAB
tx_data[1] => tx_data_tmp.DATAB
tx_data[2] => tx_data_tmp.DATAB
tx_data[3] => tx_data_tmp.DATAB
tx_data[4] => tx_data_tmp.DATAB
tx_data[5] => tx_data_tmp.DATAB
tx_data[6] => tx_data_tmp.DATAB
tx_data[7] => tx_data_tmp.DATAB
rx_ready <= rx_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MADs|Keyfilter:inst15
x => c1.DATAIN
clk => c1.CLK
clk => c2.CLK
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|MADs|counter:inst7
clk => code[0]~reg0.CLK
clk => code[1]~reg0.CLK
clk => code[2]~reg0.CLK
clk => code[3]~reg0.CLK
clk => code[4]~reg0.CLK
clk => code[5]~reg0.CLK
clk => code[6]~reg0.CLK
clk => code[7]~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
en => code[1]~reg0.ENA
en => code[0]~reg0.ENA
en => code[2]~reg0.ENA
en => code[3]~reg0.ENA
en => code[4]~reg0.ENA
en => code[5]~reg0.ENA
en => code[6]~reg0.ENA
en => code[7]~reg0.ENA
en => counter[0].ENA
en => counter[1].ENA
en => counter[2].ENA
en => counter[3].ENA
up => counter.OUTPUTSELECT
up => counter.OUTPUTSELECT
up => counter.OUTPUTSELECT
up => counter.OUTPUTSELECT
down => counter.OUTPUTSELECT
down => counter.OUTPUTSELECT
down => counter.OUTPUTSELECT
down => counter.OUTPUTSELECT
code[0] <= code[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[1] <= code[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[2] <= code[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[3] <= code[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[4] <= code[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[5] <= code[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[6] <= code[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
code[7] <= code[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|MADs|Keyfilter:inst5
x => c1.DATAIN
clk => c1.CLK
clk => c2.CLK
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|MADs|Keyfilter:inst10
x => c1.DATAIN
clk => c1.CLK
clk => c2.CLK
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|MADs|Keyfilter:inst13
x => c1.DATAIN
clk => c1.CLK
clk => c2.CLK
y <= y.DB_MAX_OUTPUT_PORT_TYPE


|MADs|Keyfilter:inst16
x => c1.DATAIN
clk => c1.CLK
clk => c2.CLK
y <= y.DB_MAX_OUTPUT_PORT_TYPE


